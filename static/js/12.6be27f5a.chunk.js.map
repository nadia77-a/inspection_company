{"version":3,"sources":["shared-components/FlashMessage/index.jsx","web/routes/Login.jsx"],"names":["FlashMessage","data","this","props","alertClass","console","log","className","role","constructor","String","Object","keys","map","key","Array","item","index","msg","type","data-dismiss","aria-label","aria-hidden","Component","Login","state","email","onSubmitForm","evt","signInByEmail","password","setState","errors","err_message","message","length","initialValues","onSubmit","validationSchema","Yup","shape","required","min","values","touched","isValid","handleChange","handleBlur","handleSubmit","htmlFor","id","value","onChange","onBlur","placeholder","onClick","handleLoginSubmit","disabled","to","connect","accountInfo","auth","accountInfoError","AuthActions"],"mappings":"kMAsCeA,E,uKAnCH,IACAC,EAASC,KAAKC,MAAdF,KACAG,EAAeF,KAAKC,MAApBC,WAER,OADAC,QAAQC,IAAI,OAAQL,GACbA,EACL,yBACEM,UAAS,sBAAiBH,EAAjB,gCACTI,KAAK,SAEJP,EAAKQ,cAAgBC,QAAU,gCAAMT,GACrCA,EAAKQ,cAAgBE,QACpBA,OAAOC,KAAKX,GAAMY,KAAI,SAACC,GACrB,OACE,wBAAIA,IAAKA,GACNA,EADH,IACSb,EAAKa,OAInBb,EAAKQ,cAAgBM,OACpBd,EAAKY,KAAI,SAACG,EAAMC,GACd,OAAO,wBAAIH,IAAKG,GAAQD,EAAKE,QAEjC,4BACEC,KAAK,SACLZ,UAAU,QACVa,eAAa,QACbC,aAAW,SAEX,0BAAMC,cAAY,QAAlB,UAGF,S,GAhCmBC,a,QCQrBC,G,kNACJC,MAAQ,CACNC,MAAO,I,EAMTC,aAAe,SAACC,GACVA,GACF,EAAKzB,MAAM0B,cAAcD,EAAIF,MAAOE,EAAIE,W,gEAL1BJ,GAChBxB,KAAK6B,SAAS,CAAEL,Y,+BAOR,IAAD,OACDM,EAAW9B,KAAKC,MAAhB6B,OACFC,EAAcD,EAAO/B,KAAO+B,EAAO/B,KAAO+B,EAAOE,QAErD,OACE,yBAAK3B,UAAU,aACb,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,oBACZyB,GAAUrB,OAAOC,KAAKoB,GAAQG,OAAS,GACtC,6BACE,kBAAC,EAAD,CAAclC,KAAMgC,EAAa7B,WAAW,cAKpD,yBAAKG,UAAU,OACb,yBAAKA,UAAU,oBACb,qCAEA,kBAAC,IAAD,CACE6B,cAAe,CAAEV,MAAO,GAAII,SAAU,IACtCO,SAAUnC,KAAKyB,aACfW,iBAAkBC,MAAaC,MAAM,CAEnCd,MAAOa,MAAaE,SAAS,YAC7BX,SAAUS,MAAaE,SAAS,YAAYC,IAAI,OAGjD,SAACvC,GAAW,IAETwC,EAOExC,EAPFwC,OACAC,EAMEzC,EANFyC,QACAZ,EAKE7B,EALF6B,OACAa,EAIE1C,EAJF0C,QACAC,EAGE3C,EAHF2C,aACAC,EAEE5C,EAFF4C,WACAC,EACE7C,EADF6C,aAEF,OACE,0BAAMX,SAAUW,GACd,yBAAKzC,UAAU,cACb,2BAAO0C,QAAQ,sBAAf,iBACA,2BACE9B,KAAK,OACL+B,GAAG,QACHC,MAAOR,EAAOjB,MACd0B,SAAUN,EACVO,OAAQN,EACRxC,UAAU,0BAMV+C,YAAY,gBAEbtB,EAAON,OAASkB,EAAQlB,OACvB,yBAAKnB,UAAU,kBAAkByB,EAAON,OAE1C,2BAAOwB,GAAG,YAAY3C,UAAU,wBAAhC,mDAIF,yBAAKA,UAAU,cACb,2BAAO0C,QAAQ,yBAAf,YACA,2BACE9B,KAAK,WACL+B,GAAG,WACHC,MAAOR,EAAOb,SACdsB,SAAUN,EACVO,OAAQN,EACRxC,UACEyB,EAAOF,UAAYc,EAAQd,SACvB,gCACA,0BAENwB,YAAY,aAEbtB,EAAOF,UAAYc,EAAQd,UAC1B,yBAAKvB,UAAU,kBAAkByB,EAAOF,WAG5C,4BACEX,KAAK,SACLZ,UAAU,kBACVgD,QAAS,WACP,EAAKC,kBAAkBb,EAAOjB,QAEhC+B,UAAWZ,GANb,UAUA,yBAAKtC,UAAU,cAAf,oCACoC,IAClC,kBAAC,IAAD,CAAMmD,GAAG,aAAT,QAFF,gB,GA1GAnC,cA8HLoC,uBALU,SAAClC,GAAD,MAAY,CACnCmC,YAAanC,EAAMoC,KAAKD,YACxB5B,OAAQP,EAAMoC,KAAKC,oBAGoBC,IAA1BJ,CAAuCnC","file":"static/js/12.6be27f5a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass FlashMessage extends Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    const { alertClass } = this.props;\r\n    console.log(\"data\", data);\r\n    return data ? (\r\n      <div\r\n        className={`alert alert-${alertClass} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        {data.constructor === String && <li> {data}</li>}\r\n        {data.constructor === Object &&\r\n          Object.keys(data).map((key) => {\r\n            return (\r\n              <li key={key}>\r\n                {key} {data[key]}\r\n              </li>\r\n            );\r\n          })}\r\n        {data.constructor === Array &&\r\n          data.map((item, index) => {\r\n            return <li key={index}>{item.msg}</li>;\r\n          })}\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nexport default FlashMessage;\r\n\r\n// USE EXAMPLE:\r\n// <FlashMessage data=\"error on...\" alertClass=\"danger\" />\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport FlashMessage from \"shared-components/FlashMessage\";\r\n\r\nimport { AuthActions } from \"redux-store/models\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n  };\r\n\r\n  handleLoginSubmit(email) {\r\n    this.setState({ email });\r\n  }\r\n  onSubmitForm = (evt) => {\r\n    if (evt) {\r\n      this.props.signInByEmail(evt.email, evt.password);\r\n    }\r\n  };\r\n  render() {\r\n    let { errors } = this.props;\r\n    let err_message = errors.data ? errors.data : errors.message;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {/* <FlashMessage data=\"error on...\" alertClass=\"danger\" /> */}\r\n          <div className=\"col-md-6 mx-auto\">\r\n            {errors && Object.keys(errors).length > 0 && (\r\n              <div>\r\n                <FlashMessage data={err_message} alertClass=\"danger\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 mx-auto\">\r\n            <h1>Login</h1>\r\n\r\n            <Formik\r\n              initialValues={{ email: \"\", password: \"\" }}\r\n              onSubmit={this.onSubmitForm}\r\n              validationSchema={Yup.object().shape({\r\n                // email: Yup.string().email().required(\"Required\"),\r\n                email: Yup.string().required(\"Required\"),\r\n                password: Yup.string().required(\"Required\").min(6),\r\n              })}\r\n            >\r\n              {(props) => {\r\n                const {\r\n                  values,\r\n                  touched,\r\n                  errors,\r\n                  isValid,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                } = props;\r\n                return (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className=\"form-control text-input\"\r\n                        // className={\r\n                        //   errors.email && touched.email\r\n                        //     ? \"form-control text-input error\"\r\n                        //     : \"form-control text-input\"\r\n                        // }\r\n                        placeholder=\"Enter email\"\r\n                      />\r\n                      {errors.email && touched.email && (\r\n                        <div className=\"input-feedback\">{errors.email}</div>\r\n                      )}\r\n                      <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                      </small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={\r\n                          errors.password && touched.password\r\n                            ? \"form-control text-input error\"\r\n                            : \"form-control text-input\"\r\n                        }\r\n                        placeholder=\"Password\"\r\n                      />\r\n                      {errors.password && touched.password && (\r\n                        <div className=\"input-feedback\">{errors.password}</div>\r\n                      )}\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary\"\r\n                      onClick={() => {\r\n                        this.handleLoginSubmit(values.email);\r\n                      }}\r\n                      disabled={!isValid}\r\n                    >\r\n                      Submit\r\n                    </button>\r\n                    <div className=\"form-group\">\r\n                      Not registered yet? Register from{\" \"}\r\n                      <Link to=\"/register\">here</Link>.\r\n                    </div>\r\n                  </form>\r\n                );\r\n              }}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapsStateToProps = (state) => ({\r\n  accountInfo: state.auth.accountInfo,\r\n  errors: state.auth.accountInfoError,\r\n});\r\n\r\nexport default connect(mapsStateToProps, AuthActions)(Login);\r\n"],"sourceRoot":""}